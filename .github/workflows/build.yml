name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  get-version:
    name: Get Agricola version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}

    steps:
      - name: Fetch the source code
        uses: actions/checkout@v4.2.2

      - name: Get the Agricola version
        id: get-version
        shell: bash
        run: |
          version="$(<version/VERSION)"
          version="$(echo "${version}" | sed 's/ //g')"
          echo "version=${version}.${{ github.run_number }}+sha.$(echo "${{ github.sha }}" | cut -c -7)" >> "${GITHUB_OUTPUT}"

  build:
    name: Build Agricola for ${{ matrix.goos }}/${{ matrix.goarch }}
    runs-on: ${{ matrix.os }}
    needs: get-version
    strategy:
      matrix:
        include:
          - { goos: "freebsd", goarch: "386", os: "ubuntu-latest" }
          - { goos: "freebsd", goarch: "amd64", os: "ubuntu-latest" }
          - { goos: "freebsd", goarch: "arm", os: "ubuntu-latest" }
          - { goos: "linux", goarch: "386", os: "ubuntu-latest" }
          - { goos: "linux", goarch: "amd64", os: "ubuntu-latest" }
          - { goos: "linux", goarch: "arm", os: "ubuntu-latest" }
          - { goos: "linux", goarch: "arm64", os: "ubuntu-latest" }
          - { goos: "openbsd", goarch: "386", os: "ubuntu-latest" }
          - { goos: "openbsd", goarch: "amd64", os: "ubuntu-latest" }
          - { goos: "solaris", goarch: "amd64", os: "ubuntu-latest" }
          - { goos: "windows", goarch: "386", os: "ubuntu-latest" }
          - { goos: "windows", goarch: "amd64", os: "ubuntu-latest" }
          - { goos: "darwin", goarch: "amd64", os: "macos-latest" }
          - { goos: "darwin", goarch: "arm64", os: "macos-latest" }
      fail-fast: false

    steps:
      - name: Fetch the source code
        uses: actions/checkout@v4.2.2

      - name: Determine the Go version
        id: go
        uses: opentofu/opentofu/.github/actions/go-version@v1.8.6

      - name: Install the Go toolchain
        uses: actions/setup-go@v5.1.0
        with:
          go-version: ${{ steps.go.outputs.version }}

      # TODO: Include the version in the artifact name.
      - name: Determine the artifact name
        run: echo "ARTIFACT_NAME=ager-${{ needs.get-version.outputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}" >> $GITHUB_ENV

      - name: Build Agricola
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: make build

      - name: Upload the build artifact
        uses: actions/upload-artifact@v4.4.3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ager
          if-no-files-found: error
